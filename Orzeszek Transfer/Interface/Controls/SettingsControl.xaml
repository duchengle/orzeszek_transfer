<!--
	
Copyright (C) 2014 Chris Dziemborowicz

This file is part of Orzeszek Transfer.

Orzeszek Transfer is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Orzeszek Transfer is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

-->

<UserControl x:Class="OrzeszekTransfer.SettingsControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:o="clr-namespace:OrzeszekTransfer"
	Height="Auto" Width="Auto" o:AccessKeyScoper.IsAccessKeyScope="True"
	Loaded="SettingsControl_OnLoaded">
	<UserControl.Resources>
		<ControlTemplate x:Key="InactiveButtonTemplate" TargetType="{x:Type Button}">
			<Grid x:Name="SettingsButtonGrid" Background="#FFFFFF">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="10"/>
				</Grid.ColumnDefinitions>
				<Label x:Name="SettingsButtonLabel" Grid.Column="3" FontSize="12" FontWeight="Bold" Foreground="#AAAAAA" Margin="0 5" VerticalAlignment="Center">Settings</Label>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter TargetName="SettingsButtonLabel" Property="Foreground" Value="#666666"/>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter TargetName="SettingsButtonLabel" Property="Foreground" Value="#000000"/>
					<Setter TargetName="SettingsButtonGrid" Property="Background">
						<Setter.Value>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<GradientStop Color="#F5F5F5" Offset="0"/>
								<GradientStop Color="#FFFFFF" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="ActiveButtonTemplate" TargetType="{x:Type Button}">
			<Grid x:Name="SettingsButtonGrid" Background="#FFFFFF">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="10"/>
				</Grid.ColumnDefinitions>
				<Label x:Name="SettingsButtonLabel" Grid.Column="3" FontSize="12" FontWeight="Bold" Foreground="#666666" Margin="0 5" VerticalAlignment="Center">Settings</Label>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsPressed" Value="True">
					<Setter TargetName="SettingsButtonLabel" Property="Foreground" Value="#000000"/>
					<Setter TargetName="SettingsButtonGrid" Property="Background">
						<Setter.Value>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<GradientStop Color="#F5F5F5" Offset="0"/>
								<GradientStop Color="#FFFFFF" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style TargetType="{x:Type Hyperlink}">
			<Setter Property="Foreground" Value="#2361A1"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Foreground" Value="#0000FF"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>
	<Border x:Name="BottomBorder" Background="#FFFFFF" BorderBrush="#DDDDDD" BorderThickness="0 0 0 1" SnapsToDevicePixels="True">
		<StackPanel>
			<Button x:Name="SettingsButton" Click="SettingsButton_Click" Template="{StaticResource InactiveButtonTemplate}"/>
			<o:SizerControl x:Name="Sizer" HeightFactor="0">
				<Grid Margin="0 0 0 10">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="15"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition Width="15"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
					</Grid.ColumnDefinitions>
					<StackPanel Grid.Column="3">
						<Border Background="#F9F9F9" BorderBrush="#DDDDDD" BorderThickness="1" Padding="5 3 5 5" SnapsToDevicePixels="True">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="75"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Grid.Resources>
									<Style TargetType="{x:Type CheckBox}">
										<Setter Property="Margin" Value="0"/>
										<Setter Property="Padding" Value="0"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type CheckBox}">
													<BulletDecorator>
														<BulletDecorator.Bullet>
															<Grid>
																<Grid.ColumnDefinitions>
																	<ColumnDefinition Width="13"/>
																	<ColumnDefinition/>
																</Grid.ColumnDefinitions>
																<Border x:Name="CheckMarkBorder" Grid.Column="0" Height="13" Width="13" Background="#FFFFFF" BorderBrush="#DDDDDD" BorderThickness="1" SnapsToDevicePixels="True" VerticalAlignment="Center">
																	<Path x:Name="CheckMark" Data="M 0 0 L 7 7 M 0 7 L 7 0" SnapsToDevicePixels="False" Stroke="#666666" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																</Border>
																<ContentPresenter Grid.Column="1" Margin="5 3 0 5" VerticalAlignment="Center"/>
															</Grid>
														</BulletDecorator.Bullet>
													</BulletDecorator>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="False">
															<Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter TargetName="CheckMarkBorder" Property="BorderBrush" Value="#666666"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter TargetName="CheckMark" Property="Stroke" Value="#000000"/>
															<Setter TargetName="CheckMarkBorder" Property="BorderBrush" Value="#000000"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
									<Style TargetType="{x:Type Label}">
										<Setter Property="Margin" Value="0"/>
										<Setter Property="Padding" Value="0"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
									</Style>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Margin" Value="0 3"/>
										<Setter Property="TextWrapping" Value="Wrap"/>
									</Style>
									<Style TargetType="{x:Type TextBox}">
										<Setter Property="Margin" Value="0 2 0 3"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type TextBox}">
													<Border x:Name="Border" Background="#FFFFFF" BorderBrush="#DDDDDD" BorderThickness="1" Padding="1">
														<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsEnabled" Value="False">
															<Setter TargetName="Border" Property="Background" Value="#F5F5F5"/>
														</Trigger>
														<Trigger Property="IsFocused" Value="True">
															<Setter TargetName="Border" Property="BorderBrush" Value="#666666"/>
														</Trigger>
														<Trigger Property="Validation.HasError" Value="True">
															<Setter TargetName="Border" Property="Background" Value="#FFDDDD"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
									</Style>
								</Grid.Resources>
								<CheckBox x:Name="AutoDetectIPCheckBox" Grid.Column="1" Grid.Row="0" IsChecked="{Binding Path=DetectExternalAddress, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">Detect IP address automatically</CheckBox>
								<Label Grid.Column="0" Grid.Row="1">IP address:</Label>
								<TextBox x:Name="IPAddressTextBox" Grid.Column="1" Grid.Row="1" Text="{Binding Path=ExternalAddress, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
								<Label Grid.Column="0" Grid.Row="2">Port:</Label>
								<TextBox x:Name="PortTextBox" Grid.Column="1" Grid.Row="2" Text="{Binding Path=Port, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
								<Label x:Name="PortCheckLabel" Grid.Column="1" Grid.Row="3" Margin="0 0 0 10"></Label>
								<CheckBox x:Name="ShellIntegrateCheckBox" Grid.Column="1" Grid.Row="4" IsChecked="{Binding Path=ShellIntegrate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">Add 'Transfer' option to Windows Explorer</CheckBox>
								<CheckBox x:Name="MinimizeToTrayCheckBox" Grid.Column="1" Grid.Row="5" IsChecked="{Binding Path=MinimizeToTray, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">Minimize to notification area (system tray)</CheckBox>
								<Label Grid.Column="0" Grid.Row="6">Version:</Label>
								<TextBlock Grid.Column="1" Grid.Row="6">
									<Hyperlink x:Name="VersionHyperlink"/>
								</TextBlock>
								<Label Grid.Column="0" Grid.Row="7">License:</Label>
								<TextBlock Grid.Column="1" Grid.Row="7">
									<Hyperlink x:Name="LicenseHyperlink" NavigateUri="http://www.gnu.org/licenses/gpl.txt">GPL 3.0</Hyperlink>
								</TextBlock>
							</Grid>
						</Border>
						<StackPanel Margin="80 10 0 0" Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="{x:Type Button}">
									<Setter Property="Margin" Value="0 0 5 0"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Button}">
												<Grid>
													<Rectangle Fill="#FFFFFF" SnapsToDevicePixels="True" Stroke="#DDDDDD"/>
													<Rectangle x:Name="HighlightRectangle" Margin="2" SnapsToDevicePixels="True" Stroke="#666666" Visibility="Hidden"/>
													<Label x:Name="ButtonLabel" FontWeight="Bold" Foreground="#AAAAAA" Margin="15 4 15 5" Padding="0">
														<ContentPresenter/>
													</Label>
												</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter TargetName="HighlightRectangle" Property="Visibility" Value="Visible"/>
														<Setter TargetName="ButtonLabel" Property="Foreground" Value="#666666"/>
													</Trigger>
													<Trigger Property="IsPressed" Value="True">
														<Setter TargetName="HighlightRectangle" Property="Stroke" Value="#000000"/>
														<Setter TargetName="HighlightRectangle" Property="Visibility" Value="Visible"/>
														<Setter TargetName="ButtonLabel" Property="Foreground" Value="#000000"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</StackPanel.Resources>
							<Button IsDefault="True" Click="OKButton_Click">OK</Button>
							<Button IsCancel="True" Click="CancelButton_Click">Cancel</Button>
						</StackPanel>
					</StackPanel>
				</Grid>
			</o:SizerControl>
		</StackPanel>
	</Border>
</UserControl>